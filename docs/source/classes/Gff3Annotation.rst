.. role:: trst-class
.. role:: trst-interface
.. role:: trst-function
.. role:: trst-property
.. role:: trst-property-desc
.. role:: trst-method
.. role:: trst-method-desc
.. role:: trst-parameter
.. role:: trst-type
.. role:: trst-type-parameter

.. _Gff3Annotation:

:trst-class:`Gff3Annotation`
============================

.. container:: collapsible

  .. code-block:: typescript

    class Gff3Annotation

.. container:: content

  An Annotation class for storing GFF3 records. For more information see http://gmod.org/wiki/GFF3/

Constructors
------------

.. container:: collapsible

  .. code-block:: typescript

    (config: Gff3AnnotationConfig): Gff3Annotation

.. container:: content


  **Parameters**

    - config: Gff3AnnotationConfig

Properties
----------

attributes
**********

.. container:: collapsible

  .. code-block:: typescript

    attributes: undefined | Map <string, string>

.. container:: content

  A horrifying GFF3 field that is essentially an anything goes set of key value pairs describing anything anybody every wants to add to a GFF3 record.

end
***

.. container:: collapsible

  .. code-block:: typescript

    end: number

.. container:: content

  The end position of the annotation in semantic coordinates (generally a position on a chromosome in base pairs).

id
**

.. container:: collapsible

  .. code-block:: typescript

    id: string

.. container:: content

  A unique identifier for an Annotation object. If an ID is not provided, one will be automatically generated by SODA when the Annotation is instantiated.

phase
*****

.. container:: collapsible

  .. code-block:: typescript

    phase: undefined | None | None | None

.. container:: content

  A GFF3 field that describes the phase for CDS (coding sequence) annotations.

row
***

.. container:: collapsible

  .. code-block:: typescript

    row: number

.. container:: content

  This describes which horizontal row the Annotation will be rendered in a Chart, assuming that the y-positioning is not overwritten during a call to the glyph rendering API.

score
*****

.. container:: collapsible

  .. code-block:: typescript

    score: undefined | number

.. container:: content

  A GFF3 field that should describe the score of the annotation.

seqid
*****

.. container:: collapsible

  .. code-block:: typescript

    seqid: undefined | string

.. container:: content

  A GFF3 field: "The ID of the landmark used to establish the coordinate system for the current feature..."

source
******

.. container:: collapsible

  .. code-block:: typescript

    source: undefined | string

.. container:: content

  A GFF3 field: "The source is a free text qualifier intended to describe the algorithm or operating procedure that generated this feature..."

start
*****

.. container:: collapsible

  .. code-block:: typescript

    start: number

.. container:: content

  The start position of the annotation in semantic coordinates (generally a position on a chromosome in base pairs).

strand
******

.. container:: collapsible

  .. code-block:: typescript

    strand: undefined | Forward | Reverse | Unknown | Unoriented

.. container:: content

  A GFF3 field that describes the strand of the annotation.

tag
***

.. container:: collapsible

  .. code-block:: typescript

    tag: undefined | string

.. container:: content

  An optional tag for the annotation. This can be thought of as a something of a secondary ID.

type
****

.. container:: collapsible

  .. code-block:: typescript

    type: undefined | string

.. container:: content

  A GFF3 field that is supposed to be "constrained to be either: (a) a term from the "lite" sequence ontology, SOFA; or (b) a SOFA accession number." However, this is currently not enforced by SODA.

width
*****

.. container:: collapsible

  .. code-block:: typescript

    width: number

.. container:: content

  The width of the annotation in semantic coordinates.


Accessors
---------

w
*

.. container:: collapsible

 .. code-block:: typescript

    get w(): number

.. container:: content

  A convenience getter that returns the width property.

.. container:: collapsible

 .. code-block:: typescript

    set w(w: number): void

.. container:: content

  A convenience setter that sets the width property.

x
*

.. container:: collapsible

 .. code-block:: typescript

    get x(): number

.. container:: content

  A convenience getter that returns the start property.

.. container:: collapsible

 .. code-block:: typescript

    set x(x: number): void

.. container:: content

  A convenience setter that sets the start property.

x2
**

.. container:: collapsible

 .. code-block:: typescript

    get x2(): number

.. container:: content

  A convenience getter that returns the end property.

.. container:: collapsible

 .. code-block:: typescript

    set x2(x: number): void

.. container:: content

  A convenience setter that sets the end property.

y
*

.. container:: collapsible

 .. code-block:: typescript

    get y(): number

.. container:: content

  A convenience getter that returns the row property.

.. container:: collapsible

 .. code-block:: typescript

    set y(y: number): void

.. container:: content

  A convenience setter that sets the row property.
